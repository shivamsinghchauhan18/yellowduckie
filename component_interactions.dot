// Duckietown Safe Navigation - Component Interaction Diagram
// Detailed Package Relationships and Data Flow
// Render with: neato -Tsvg component_interactions.dot -o component_interactions.svg

digraph ComponentInteractions {
    layout=neato;
    overlap=false;
    splines=true;
    fontname="Arial";
    fontsize=12;
    
    node [fontname="Arial", fontsize=10, style=filled];
    edge [fontname="Arial", fontsize=8];
    
    // ========== CORE PACKAGES ==========
    
    // Sensor packages
    camera [label="📷 camera\nImage Capture", pos="0,8!", shape=box, fillcolor="#e3f2fd", color="#1976d2"];
    camera_mock [label="🎭 camera_mock\nSimulation", pos="2,8!", shape=box, fillcolor="#e3f2fd", color="#1976d2"];
    
    // Image processing
    image_processing [label="🖼️ image_processing\nRectification", pos="1,7!", shape=box, fillcolor="#f3e5f5", color="#7b1fa2"];
    anti_instagram [label="🎨 anti_instagram\nColor Correction", pos="3,7!", shape=box, fillcolor="#f3e5f5", color="#7b1fa2"];
    
    // Core perception
    line_detector [label="🛣️ line_detector\nLane Detection", pos="0,6!", shape=box, fillcolor="#f3e5f5", color="#7b1fa2"];
    ground_projection [label="🌍 ground_projection\n3D Mapping", pos="2,6!", shape=box, fillcolor="#f3e5f5", color="#7b1fa2"];
    lane_filter [label="🎯 lane_filter\nPose Estimation", pos="4,6!", shape=box, fillcolor="#f3e5f5", color="#7b1fa2"];
    
    // Object detection
    object_detection [label="🤖 object_detection\nNeural Network", pos="6,7!", shape=box, fillcolor="#f3e5f5", color="#7b1fa2"];
    vehicle_detection [label="🚗 vehicle_detection\nVehicle Recognition", pos="8,7!", shape=box, fillcolor="#f3e5f5", color="#7b1fa2"];
    apriltag [label="🏷️ apriltag\nSign Detection", pos="10,7!", shape=box, fillcolor="#f3e5f5", color="#7b1fa2"];
    
    // Advanced perception (NEW)
    predictive_perception [label="🔮 predictive_perception\nTrajectory Prediction", pos="6,5!", shape=box, fillcolor="#e8eaf6", color="#3f51b5"];
    
    // Neural network
    nn_model [label="🧠 nn_model\nDeep Learning", pos="8,5!", shape=box, fillcolor="#e8eaf6", color="#3f51b5"];
    
    // Control packages
    lane_control [label="🎛️ lane_control\nPath Following", pos="2,4!", shape=box, fillcolor="#e8f5e8", color="#2e7d32"];
    stop_line_filter [label="🛑 stop_line_filter\nIntersection Logic", pos="4,4!", shape=box, fillcolor="#e8f5e8", color="#2e7d32"];
    
    // Advanced control (NEW)
    adaptive_speed_control [label="🚀 adaptive_speed_control\nDynamic Speed", pos="0,4!", shape=box, fillcolor="#e1f5fe", color="#0277bd"];
    
    // Safety systems (NEW)
    safety_system [label="🛡️ safety_system\nEmergency Protection", pos="6,3!", shape=box, fillcolor="#ffebee", color="#c62828"];
    
    // State management
    fsm [label="🔄 fsm\nState Machine", pos="4,2!", shape=box, fillcolor="#f1f8e9", color="#558b2f"];
    
    // LED control
    led_emitter [label="💡 led_emitter\nLight Control", pos="0,2!", shape=box, fillcolor="#fff3e0", color="#ef6c00"];
    led_pattern_switch [label="🎨 led_pattern_switch\nPattern Selection", pos="2,2!", shape=box, fillcolor="#fff3e0", color="#ef6c00"];
    led_joy_mapper [label="🎮 led_joy_mapper\nJoystick Mapping", pos="0,1!", shape=box, fillcolor="#fff3e0", color="#ef6c00"];
    
    // Visualization
    visualization_tools [label="📊 visualization_tools\nDebug Display", pos="8,1!", shape=box, fillcolor="#f3e5f5", color="#7b1fa2"];
    
    // Utilities
    utils [label="🔧 utils\nHelper Functions", pos="10,1!", shape=box, fillcolor="#fafafa", color="#424242"];
    solution [label="📋 solution\nIntegration Logic", pos="10,3!", shape=box, fillcolor="#fafafa", color="#424242"];
    
    // Demo coordination
    duckietown_demos [label="🎯 duckietown_demos\nSystem Orchestration", pos="6,1!", shape=box, fillcolor="#f1f8e9", color="#558b2f"];
    
    // Complete pipeline
    complete_image_pipeline [label="🔄 complete_image_pipeline\nEnd-to-End Processing", pos="4,8!", shape=box, fillcolor="#f3e5f5", color="#7b1fa2"];
    
    // ========== CONNECTIONS ==========
    
    // Camera to processing
    camera -> image_processing [label="raw images", color="#2196f3"];
    camera -> line_detector [label="compressed", color="#2196f3"];
    camera -> object_detection [label="images", color="#2196f3"];
    camera -> vehicle_detection [label="images", color="#2196f3"];
    camera -> apriltag [label="images", color="#2196f3"];
    camera_mock -> line_detector [label="sim images", color="#2196f3", style=dashed];
    
    // Image processing pipeline
    image_processing -> anti_instagram [label="processed", color="#9c27b0"];
    anti_instagram -> line_detector [label="corrected", color="#9c27b0"];
    
    // Core perception flow
    line_detector -> ground_projection [label="segments", color="#4caf50"];
    ground_projection -> lane_filter [label="3D segments", color="#4caf50"];
    ground_projection -> stop_line_filter [label="stop segments", color="#4caf50"];
    lane_filter -> lane_control [label="pose", color="#4caf50"];
    lane_filter -> stop_line_filter [label="pose", color="#4caf50"];
    
    // Object detection flow
    object_detection -> predictive_perception [label="detections", color="#ff9800"];
    vehicle_detection -> predictive_perception [label="vehicles", color="#ff9800"];
    apriltag -> lane_control [label="signs", color="#ff9800"];
    nn_model -> object_detection [label="inference", color="#3f51b5"];
    
    // Advanced perception
    predictive_perception -> safety_system [label="trajectories", color="#f44336"];
    predictive_perception -> adaptive_speed_control [label="predictions", color="#f44336"];
    
    // Control integration
    lane_control -> adaptive_speed_control [label="commands", color="#4caf50"];
    stop_line_filter -> lane_control [label="stop info", color="#4caf50"];
    adaptive_speed_control -> safety_system [label="speed data", color="#ff5722"];
    
    // Safety system
    safety_system -> lane_control [label="safety override", color="#f44336", penwidth=3];
    safety_system -> adaptive_speed_control [label="emergency stop", color="#f44336", penwidth=3];
    
    // State management
    fsm -> lane_control [label="mode", color="#8bc34a"];
    fsm -> adaptive_speed_control [label="state", color="#8bc34a"];
    fsm -> led_pattern_switch [label="state", color="#8bc34a"];
    fsm -> safety_system [label="mode", color="#8bc34a"];
    
    // LED control
    led_pattern_switch -> led_emitter [label="patterns", color="#ff9800"];
    led_joy_mapper -> led_emitter [label="manual", color="#ff9800"];
    lane_control -> led_emitter [label="signals", color="#ff9800"];
    safety_system -> led_emitter [label="warnings", color="#f44336"];
    
    // Visualization and debugging
    lane_filter -> visualization_tools [label="pose data", color="#9e9e9e", style=dashed];
    ground_projection -> visualization_tools [label="segments", color="#9e9e9e", style=dashed];
    predictive_perception -> visualization_tools [label="trajectories", color="#9e9e9e", style=dashed];
    
    // Utilities and integration
    utils -> object_detection [label="helpers", color="#607d8b", style=dotted];
    utils -> vehicle_detection [label="utilities", color="#607d8b", style=dotted];
    solution -> duckietown_demos [label="config", color="#607d8b", style=dotted];
    
    // Complete pipeline integration
    complete_image_pipeline -> line_detector [label="pipeline", color="#795548", style=dotted];
    complete_image_pipeline -> object_detection [label="pipeline", color="#795548", style=dotted];
    
    // Demo orchestration
    duckietown_demos -> fsm [label="launch", color="#4caf50", style=bold];
    duckietown_demos -> lane_control [label="config", color="#4caf50", style=bold];
    duckietown_demos -> adaptive_speed_control [label="params", color="#4caf50", style=bold];
    duckietown_demos -> safety_system [label="setup", color="#4caf50", style=bold];
    
    // ========== ADVANCED FEATURES HIGHLIGHT ==========
    
    // Create invisible nodes for positioning advanced features
    adv1 [label="🔮 PREDICTIVE SAFETY\nKalman filtering\nTrajectory prediction\nCollision avoidance", 
          pos="12,6!", shape=note, fillcolor="#ffcdd2", color="#d32f2f"];
    
    adv2 [label="🚀 ADAPTIVE CONTROL\nEnvironmental adaptation\nDynamic speed adjustment\nMulti-factor optimization", 
          pos="12,4!", shape=note, fillcolor="#c8e6c9", color="#388e3c"];
    
    adv3 [label="🛡️ MULTI-LAYER SAFETY\nEmergency stop system\nRisk assessment\nSafety arbitration", 
          pos="12,2!", shape=note, fillcolor="#fff3cd", color="#856404"];
    
    // Connect advanced features to relevant components
    predictive_perception -> adv1 [style=invis];
    adaptive_speed_control -> adv2 [style=invis];
    safety_system -> adv3 [style=invis];
    
    // ========== LEGEND ==========
    
    legend_title [label="LEGEND", pos="12,8!", shape=plaintext, fontsize=12, fontcolor="#333"];
    legend_core [label="Core Perception", pos="12,7.5!", shape=box, fillcolor="#f3e5f5", color="#7b1fa2", fontsize=8];
    legend_advanced [label="Advanced AI/Safety", pos="12,7!", shape=box, fillcolor="#e8eaf6", color="#3f51b5", fontsize=8];
    legend_control [label="Control Systems", pos="12,6.5!", shape=box, fillcolor="#e8f5e8", color="#2e7d32", fontsize=8];
    
    // Data flow legend
    legend_data [label="→ Primary Data Flow", pos="12,5.5!", shape=plaintext, fontsize=8, fontcolor="#4caf50"];
    legend_safety [label="→ Safety Critical", pos="12,5!", shape=plaintext, fontsize=8, fontcolor="#f44336"];
    legend_config [label="⋯ Configuration", pos="12,4.5!", shape=plaintext, fontsize=8, fontcolor="#607d8b"];
}